{"version":3,"sources":["../../src/renderers/shared.js"],"names":["getEncodingHeight","encoding","options","height","displayValue","text","length","fontSize","textMargin","marginTop","marginBottom","getBarcodePadding","textWidth","barcodeWidth","textAlign","Math","floor","calculateEncodingAttributes","encodings","barcodeOptions","context","i","messureText","data","width","ceil","max","barcodePadding","getTotalWidthOfEncodings","totalWidth","getMaximumHeightOfEncodings","maxHeight","string","ctx","document","createElement","getContext","font","fontOptions","size","measureText"],"mappings":"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","sourcesContent":["function getEncodingHeight(encoding, options) {\n\treturn (\n\t\toptions.height +\n\t\t(options.displayValue && encoding.text.length > 0 ? options.fontSize + options.textMargin : 0) +\n\t\toptions.marginTop +\n\t\toptions.marginBottom\n\t);\n}\n\nfunction getBarcodePadding(textWidth, barcodeWidth, options) {\n\tif (options.displayValue && barcodeWidth < textWidth) {\n\t\tif (options.textAlign == 'center') {\n\t\t\treturn Math.floor((textWidth - barcodeWidth) / 2);\n\t\t} else if (options.textAlign == 'left') {\n\t\t\treturn 0;\n\t\t} else if (options.textAlign == 'right') {\n\t\t\treturn Math.floor(textWidth - barcodeWidth);\n\t\t}\n\t}\n\treturn 0;\n}\n\nfunction calculateEncodingAttributes(encodings, barcodeOptions, context) {\n\tfor (let i = 0; i < encodings.length; i++) {\n\t\tvar encoding = encodings[i];\n\t\tvar options = { ...barcodeOptions, ...encoding.options };\n\n\t\t// Calculate the width of the encoding\n\t\tvar textWidth;\n\t\tif (options.displayValue) {\n\t\t\ttextWidth = messureText(encoding.text, options, context);\n\t\t} else {\n\t\t\ttextWidth = 0;\n\t\t}\n\n\t\tvar barcodeWidth = encoding.data.length * options.width;\n\t\tencoding.width = Math.ceil(Math.max(textWidth, barcodeWidth));\n\n\t\tencoding.height = getEncodingHeight(encoding, options);\n\n\t\tencoding.barcodePadding = getBarcodePadding(textWidth, barcodeWidth, options);\n\t}\n}\n\nfunction getTotalWidthOfEncodings(encodings) {\n\tvar totalWidth = 0;\n\tfor (let i = 0; i < encodings.length; i++) {\n\t\ttotalWidth += encodings[i].width;\n\t}\n\treturn totalWidth;\n}\n\nfunction getMaximumHeightOfEncodings(encodings) {\n\tvar maxHeight = 0;\n\tfor (let i = 0; i < encodings.length; i++) {\n\t\tif (encodings[i].height > maxHeight) {\n\t\t\tmaxHeight = encodings[i].height;\n\t\t}\n\t}\n\treturn maxHeight;\n}\n\nfunction messureText(string, options, context) {\n\tvar ctx;\n\n\tif (context) {\n\t\tctx = context;\n\t} else if (typeof document !== 'undefined') {\n\t\tctx = document.createElement('canvas').getContext('2d');\n\t} else {\n\t\t// If the text cannot be messured we will return 0.\n\t\t// This will make some barcode with big text render incorrectly\n\t\treturn 0;\n\t}\n\tctx.font = options.fontOptions + ' ' + options.fontSize + 'px ' + options.font;\n\n\t// Calculate the width of the encoding\n\tvar size = ctx.measureText(string).width;\n\n\treturn size;\n}\n\nexport {\n\tgetMaximumHeightOfEncodings,\n\tgetEncodingHeight,\n\tgetBarcodePadding,\n\tcalculateEncodingAttributes,\n\tgetTotalWidthOfEncodings\n};\n"],"file":"shared.js"}