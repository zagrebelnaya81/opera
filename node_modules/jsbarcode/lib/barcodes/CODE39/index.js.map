{"version":3,"sources":["../../../src/barcodes/CODE39/index.js"],"names":["CODE39","data","options","toUpperCase","mod43","getCharacter","mod43checksum","result","getEncoding","i","length","text","search","Barcode","characters","encodings","character","getBinary","characterValue","toString","indexOf","checksum"],"mappings":"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","sourcesContent":["// Encoding documentation:\n// https://en.wikipedia.org/wiki/Code_39#Encoding\n\nimport Barcode from '../Barcode.js';\n\nclass CODE39 extends Barcode {\n\tconstructor(data, options) {\n\t\tdata = data.toUpperCase();\n\n\t\t// Calculate mod43 checksum if enabled\n\t\tif (options.mod43) {\n\t\t\tdata += getCharacter(mod43checksum(data));\n\t\t}\n\n\t\tsuper(data, options);\n\t}\n\n\tencode() {\n\t\t// First character is always a *\n\t\tvar result = getEncoding('*');\n\n\t\t// Take every character and add the binary representation to the result\n\t\tfor (let i = 0; i < this.data.length; i++) {\n\t\t\tresult += getEncoding(this.data[i]) + '0';\n\t\t}\n\n\t\t// Last character is always a *\n\t\tresult += getEncoding('*');\n\n\t\treturn {\n\t\t\tdata: result,\n\t\t\ttext: this.text\n\t\t};\n\t}\n\n\tvalid() {\n\t\treturn this.data.search(/^[0-9A-Z\\-\\.\\ \\$\\/\\+\\%]+$/) !== -1;\n\t}\n}\n\n// All characters. The position in the array is the (checksum) value\nvar characters = [\n\t'0',\n\t'1',\n\t'2',\n\t'3',\n\t'4',\n\t'5',\n\t'6',\n\t'7',\n\t'8',\n\t'9',\n\t'A',\n\t'B',\n\t'C',\n\t'D',\n\t'E',\n\t'F',\n\t'G',\n\t'H',\n\t'I',\n\t'J',\n\t'K',\n\t'L',\n\t'M',\n\t'N',\n\t'O',\n\t'P',\n\t'Q',\n\t'R',\n\t'S',\n\t'T',\n\t'U',\n\t'V',\n\t'W',\n\t'X',\n\t'Y',\n\t'Z',\n\t'-',\n\t'.',\n\t' ',\n\t'$',\n\t'/',\n\t'+',\n\t'%',\n\t'*'\n];\n\n// The decimal representation of the characters, is converted to the\n// corresponding binary with the getEncoding function\nvar encodings = [\n\t20957,\n\t29783,\n\t23639,\n\t30485,\n\t20951,\n\t29813,\n\t23669,\n\t20855,\n\t29789,\n\t23645,\n\t29975,\n\t23831,\n\t30533,\n\t22295,\n\t30149,\n\t24005,\n\t21623,\n\t29981,\n\t23837,\n\t22301,\n\t30023,\n\t23879,\n\t30545,\n\t22343,\n\t30161,\n\t24017,\n\t21959,\n\t30065,\n\t23921,\n\t22385,\n\t29015,\n\t18263,\n\t29141,\n\t17879,\n\t29045,\n\t18293,\n\t17783,\n\t29021,\n\t18269,\n\t17477,\n\t17489,\n\t17681,\n\t20753,\n\t35770\n];\n\n// Get the binary representation of a character by converting the encodings\n// from decimal to binary\nfunction getEncoding(character) {\n\treturn getBinary(characterValue(character));\n}\n\nfunction getBinary(characterValue) {\n\treturn encodings[characterValue].toString(2);\n}\n\nfunction getCharacter(characterValue) {\n\treturn characters[characterValue];\n}\n\nfunction characterValue(character) {\n\treturn characters.indexOf(character);\n}\n\nfunction mod43checksum(data) {\n\tvar checksum = 0;\n\tfor (let i = 0; i < data.length; i++) {\n\t\tchecksum += characterValue(data[i]);\n\t}\n\n\tchecksum = checksum % 43;\n\treturn checksum;\n}\n\nexport default CODE39;\n"],"file":"index.js"}