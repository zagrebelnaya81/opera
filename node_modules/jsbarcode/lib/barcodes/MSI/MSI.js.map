{"version":3,"sources":["../../../src/barcodes/MSI/MSI.js"],"names":["MSI","data","options","ret","i","length","digit","parseInt","bin","toString","addZeroes","b","text","search","Barcode","number","n"],"mappings":";;;;;;;AAGA;;;;;;;;;;;;;;;;;;;;;;IAEMA,G;;;;;AACL,eAAYC,IAAZ,EAAkBC,OAAlB,EAA2B;AAAA;;AAAA,4EACpBD,IADoB,EACdC,OADc;AAE1B;;;;6BAEQ;AACR;AACA,UAAIC,GAAG,GAAG,KAAV;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKH,IAAL,CAAUI,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AAC1C;AACA,YAAIE,KAAK,GAAGC,QAAQ,CAAC,KAAKN,IAAL,CAAUG,CAAV,CAAD,CAApB;AACA,YAAII,GAAG,GAAGF,KAAK,CAACG,QAAN,CAAe,CAAf,CAAV;AACAD,QAAAA,GAAG,GAAGE,SAAS,CAACF,GAAD,EAAM,IAAIA,GAAG,CAACH,MAAd,CAAf,CAJ0C,CAM1C;;AACA,aAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAAG,CAACH,MAAxB,EAAgCM,CAAC,EAAjC,EAAqC;AACpCR,UAAAA,GAAG,IAAIK,GAAG,CAACG,CAAD,CAAH,IAAU,GAAV,GAAgB,KAAhB,GAAwB,KAA/B;AACA;AACD,OAdO,CAgBR;;;AACAR,MAAAA,GAAG,IAAI,MAAP;AAEA,aAAO;AACNF,QAAAA,IAAI,EAAEE,GADA;AAENS,QAAAA,IAAI,EAAE,KAAKA;AAFL,OAAP;AAIA;;;4BAEO;AACP,aAAO,KAAKX,IAAL,CAAUY,MAAV,CAAiB,UAAjB,MAAiC,CAAC,CAAzC;AACA;;;;EAhCgBC,iB;;AAmClB,SAASJ,SAAT,CAAmBK,MAAnB,EAA2BC,CAA3B,EAA8B;AAC7B,OAAK,IAAIZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGY,CAApB,EAAuBZ,CAAC,EAAxB,EAA4B;AAC3BW,IAAAA,MAAM,GAAG,MAAMA,MAAf;AACA;;AACD,SAAOA,MAAP;AACA;;eAEcf,G","sourcesContent":["// Encoding documentation\n// https://en.wikipedia.org/wiki/MSI_Barcode#Character_set_and_binary_lookup\n\nimport Barcode from '../Barcode.js';\n\nclass MSI extends Barcode {\n\tconstructor(data, options) {\n\t\tsuper(data, options);\n\t}\n\n\tencode() {\n\t\t// Start bits\n\t\tvar ret = '110';\n\n\t\tfor (var i = 0; i < this.data.length; i++) {\n\t\t\t// Convert the character to binary (always 4 binary digits)\n\t\t\tvar digit = parseInt(this.data[i]);\n\t\t\tvar bin = digit.toString(2);\n\t\t\tbin = addZeroes(bin, 4 - bin.length);\n\n\t\t\t// Add 100 for every zero and 110 for every 1\n\t\t\tfor (var b = 0; b < bin.length; b++) {\n\t\t\t\tret += bin[b] == '0' ? '100' : '110';\n\t\t\t}\n\t\t}\n\n\t\t// End bits\n\t\tret += '1001';\n\n\t\treturn {\n\t\t\tdata: ret,\n\t\t\ttext: this.text\n\t\t};\n\t}\n\n\tvalid() {\n\t\treturn this.data.search(/^[0-9]+$/) !== -1;\n\t}\n}\n\nfunction addZeroes(number, n) {\n\tfor (var i = 0; i < n; i++) {\n\t\tnumber = '0' + number;\n\t}\n\treturn number;\n}\n\nexport default MSI;\n"],"file":"MSI.js"}