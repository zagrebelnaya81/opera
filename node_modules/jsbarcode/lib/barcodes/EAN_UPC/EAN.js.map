{"version":3,"sources":["../../../src/barcodes/EAN_UPC/EAN.js"],"names":["EAN","data","options","fontSize","flat","width","guardHeight","height","textMargin","encodeFlat","encodeGuarded","from","to","text","substr","structure","textOptions","guardOptions","SIDE_BIN","leftEncode","leftText","MIDDLE_BIN","rightEncode","rightText","join","Barcode"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;AAEA;IACMA,G;;;;;AACL,eAAYC,IAAZ,EAAkBC,OAAlB,EAA2B;AAAA;;AAAA;;AAC1B,6EAAMD,IAAN,EAAYC,OAAZ,GAD0B,CAG1B;;AACA,UAAKC,QAAL,GAAgB,CAACD,OAAO,CAACE,IAAT,IAAiBF,OAAO,CAACC,QAAR,GAAmBD,OAAO,CAACG,KAAR,GAAgB,EAApD,GAAyDH,OAAO,CAACG,KAAR,GAAgB,EAAzE,GAA8EH,OAAO,CAACC,QAAtG,CAJ0B,CAM1B;;AACA,UAAKG,WAAL,GAAmBJ,OAAO,CAACK,MAAR,GAAiB,MAAKJ,QAAL,GAAgB,CAAjC,GAAqCD,OAAO,CAACM,UAAhE;AAP0B;AAQ1B;;;;6BAEQ;AACR,aAAO,KAAKN,OAAL,CAAaE,IAAb,GAAoB,KAAKK,UAAL,EAApB,GAAwC,KAAKC,aAAL,EAA/C;AACA;;;6BAEQC,I,EAAMC,E,EAAI;AAClB,aAAO,KAAKC,IAAL,CAAUC,MAAV,CAAiBH,IAAjB,EAAuBC,EAAvB,CAAP;AACA;;;+BAEUX,I,EAAMc,S,EAAW;AAC3B,aAAO,sBAAOd,IAAP,EAAac,SAAb,CAAP;AACA;;;8BAESJ,I,EAAMC,E,EAAI;AACnB,aAAO,KAAKC,IAAL,CAAUC,MAAV,CAAiBH,IAAjB,EAAuBC,EAAvB,CAAP;AACA;;;gCAEWX,I,EAAMc,S,EAAW;AAC5B,aAAO,sBAAOd,IAAP,EAAac,SAAb,CAAP;AACA;;;oCAEe;AACf,UAAMC,WAAW,GAAG;AAAEb,QAAAA,QAAQ,EAAE,KAAKA;AAAjB,OAApB;AACA,UAAMc,YAAY,GAAG;AAAEV,QAAAA,MAAM,EAAE,KAAKD;AAAf,OAArB;AAEA,aAAO,CACN;AAAEL,QAAAA,IAAI,EAAEiB,mBAAR;AAAkBhB,QAAAA,OAAO,EAAEe;AAA3B,OADM,EAEN;AAAEhB,QAAAA,IAAI,EAAE,KAAKkB,UAAL,EAAR;AAA2BN,QAAAA,IAAI,EAAE,KAAKO,QAAL,EAAjC;AAAkDlB,QAAAA,OAAO,EAAEc;AAA3D,OAFM,EAGN;AAAEf,QAAAA,IAAI,EAAEoB,qBAAR;AAAoBnB,QAAAA,OAAO,EAAEe;AAA7B,OAHM,EAIN;AACChB,QAAAA,IAAI,EAAE,KAAKqB,WAAL,EADP;AAECT,QAAAA,IAAI,EAAE,KAAKU,SAAL,EAFP;AAGCrB,QAAAA,OAAO,EAAEc;AAHV,OAJM,EASN;AAAEf,QAAAA,IAAI,EAAEiB,mBAAR;AAAkBhB,QAAAA,OAAO,EAAEe;AAA3B,OATM,CAAP;AAWA;;;iCAEY;AACZ,UAAMhB,IAAI,GAAG,CAACiB,mBAAD,EAAW,KAAKC,UAAL,EAAX,EAA8BE,qBAA9B,EAA0C,KAAKC,WAAL,EAA1C,EAA8DJ,mBAA9D,CAAb;AAEA,aAAO;AACNjB,QAAAA,IAAI,EAAEA,IAAI,CAACuB,IAAL,CAAU,EAAV,CADA;AAENX,QAAAA,IAAI,EAAE,KAAKA;AAFL,OAAP;AAIA;;;;EAvDgBY,iB;;eA0DHzB,G","sourcesContent":["import { SIDE_BIN, MIDDLE_BIN } from './constants';\nimport encode from './encoder';\nimport Barcode from '../Barcode';\n\n// Base class for EAN8 & EAN13\nclass EAN extends Barcode {\n\tconstructor(data, options) {\n\t\tsuper(data, options);\n\n\t\t// Make sure the font is not bigger than the space between the guard bars\n\t\tthis.fontSize = !options.flat && options.fontSize > options.width * 10 ? options.width * 10 : options.fontSize;\n\n\t\t// Make the guard bars go down half the way of the text\n\t\tthis.guardHeight = options.height + this.fontSize / 2 + options.textMargin;\n\t}\n\n\tencode() {\n\t\treturn this.options.flat ? this.encodeFlat() : this.encodeGuarded();\n\t}\n\n\tleftText(from, to) {\n\t\treturn this.text.substr(from, to);\n\t}\n\n\tleftEncode(data, structure) {\n\t\treturn encode(data, structure);\n\t}\n\n\trightText(from, to) {\n\t\treturn this.text.substr(from, to);\n\t}\n\n\trightEncode(data, structure) {\n\t\treturn encode(data, structure);\n\t}\n\n\tencodeGuarded() {\n\t\tconst textOptions = { fontSize: this.fontSize };\n\t\tconst guardOptions = { height: this.guardHeight };\n\n\t\treturn [\n\t\t\t{ data: SIDE_BIN, options: guardOptions },\n\t\t\t{ data: this.leftEncode(), text: this.leftText(), options: textOptions },\n\t\t\t{ data: MIDDLE_BIN, options: guardOptions },\n\t\t\t{\n\t\t\t\tdata: this.rightEncode(),\n\t\t\t\ttext: this.rightText(),\n\t\t\t\toptions: textOptions\n\t\t\t},\n\t\t\t{ data: SIDE_BIN, options: guardOptions }\n\t\t];\n\t}\n\n\tencodeFlat() {\n\t\tconst data = [SIDE_BIN, this.leftEncode(), MIDDLE_BIN, this.rightEncode(), SIDE_BIN];\n\n\t\treturn {\n\t\t\tdata: data.join(''),\n\t\t\ttext: this.text\n\t\t};\n\t}\n}\n\nexport default EAN;\n"],"file":"EAN.js"}