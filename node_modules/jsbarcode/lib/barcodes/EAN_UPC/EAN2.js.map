{"version":3,"sources":["../../../src/barcodes/EAN_UPC/EAN2.js"],"names":["EAN2","data","options","search","structure","EAN2_STRUCTURE","parseInt","text","Barcode"],"mappings":";;;;;;;AAGA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;IAEMA,I;;;;;AACL,gBAAYC,IAAZ,EAAkBC,OAAlB,EAA2B;AAAA;;AAAA,6EACpBD,IADoB,EACdC,OADc;AAE1B;;;;4BAEO;AACP,aAAO,KAAKD,IAAL,CAAUE,MAAV,CAAiB,YAAjB,MAAmC,CAAC,CAA3C;AACA;;;6BAEQ;AACR;AACA,UAAMC,SAAS,GAAGC,0BAAeC,QAAQ,CAAC,KAAKL,IAAN,CAAR,GAAsB,CAArC,CAAlB;;AACA,aAAO;AACN;AACAA,QAAAA,IAAI,EAAE,SAAS,sBAAO,KAAKA,IAAZ,EAAkBG,SAAlB,EAA6B,IAA7B,CAFT;AAGNG,QAAAA,IAAI,EAAE,KAAKA;AAHL,OAAP;AAKA;;;;EAjBiBC,iB;;eAoBJR,I","sourcesContent":["// Encoding documentation:\n// https://en.wikipedia.org/wiki/EAN_2#Encoding\n\nimport { EAN2_STRUCTURE } from './constants';\nimport encode from './encoder';\nimport Barcode from '../Barcode';\n\nclass EAN2 extends Barcode {\n\tconstructor(data, options) {\n\t\tsuper(data, options);\n\t}\n\n\tvalid() {\n\t\treturn this.data.search(/^[0-9]{2}$/) !== -1;\n\t}\n\n\tencode() {\n\t\t// Choose the structure based on the number mod 4\n\t\tconst structure = EAN2_STRUCTURE[parseInt(this.data) % 4];\n\t\treturn {\n\t\t\t// Start bits + Encode the two digits with 01 in between\n\t\t\tdata: '1011' + encode(this.data, structure, '01'),\n\t\t\ttext: this.text\n\t\t};\n\t}\n}\n\nexport default EAN2;\n"],"file":"EAN2.js"}