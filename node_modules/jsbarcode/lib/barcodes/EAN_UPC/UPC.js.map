{"version":3,"sources":["../../../src/barcodes/EAN_UPC/UPC.js"],"names":["UPC","data","options","search","checksum","displayValue","fontSize","width","guardHeight","height","textMargin","flat","flatEncoding","guardedEncoding","result","substr","text","push","textAlign","Barcode","number","i","parseInt"],"mappings":"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","sourcesContent":["// Encoding documentation:\n// https://en.wikipedia.org/wiki/Universal_Product_Code#Encoding\n\nimport encode from './encoder';\nimport Barcode from '../Barcode.js';\n\nclass UPC extends Barcode {\n\tconstructor(data, options) {\n\t\t// Add checksum if it does not exist\n\t\tif (data.search(/^[0-9]{11}$/) !== -1) {\n\t\t\tdata += checksum(data);\n\t\t}\n\n\t\tsuper(data, options);\n\n\t\tthis.displayValue = options.displayValue;\n\n\t\t// Make sure the font is not bigger than the space between the guard bars\n\t\tif (options.fontSize > options.width * 10) {\n\t\t\tthis.fontSize = options.width * 10;\n\t\t} else {\n\t\t\tthis.fontSize = options.fontSize;\n\t\t}\n\n\t\t// Make the guard bars go down half the way of the text\n\t\tthis.guardHeight = options.height + this.fontSize / 2 + options.textMargin;\n\t}\n\n\tvalid() {\n\t\treturn this.data.search(/^[0-9]{12}$/) !== -1 && this.data[11] == checksum(this.data);\n\t}\n\n\tencode() {\n\t\tif (this.options.flat) {\n\t\t\treturn this.flatEncoding();\n\t\t} else {\n\t\t\treturn this.guardedEncoding();\n\t\t}\n\t}\n\n\tflatEncoding() {\n\t\tvar result = '';\n\n\t\tresult += '101';\n\t\tresult += encode(this.data.substr(0, 6), 'LLLLLL');\n\t\tresult += '01010';\n\t\tresult += encode(this.data.substr(6, 6), 'RRRRRR');\n\t\tresult += '101';\n\n\t\treturn {\n\t\t\tdata: result,\n\t\t\ttext: this.text\n\t\t};\n\t}\n\n\tguardedEncoding() {\n\t\tvar result = [];\n\n\t\t// Add the first digit\n\t\tif (this.displayValue) {\n\t\t\tresult.push({\n\t\t\t\tdata: '00000000',\n\t\t\t\ttext: this.text.substr(0, 1),\n\t\t\t\toptions: { textAlign: 'left', fontSize: this.fontSize }\n\t\t\t});\n\t\t}\n\n\t\t// Add the guard bars\n\t\tresult.push({\n\t\t\tdata: '101' + encode(this.data[0], 'L'),\n\t\t\toptions: { height: this.guardHeight }\n\t\t});\n\n\t\t// Add the left side\n\t\tresult.push({\n\t\t\tdata: encode(this.data.substr(1, 5), 'LLLLL'),\n\t\t\ttext: this.text.substr(1, 5),\n\t\t\toptions: { fontSize: this.fontSize }\n\t\t});\n\n\t\t// Add the middle bits\n\t\tresult.push({\n\t\t\tdata: '01010',\n\t\t\toptions: { height: this.guardHeight }\n\t\t});\n\n\t\t// Add the right side\n\t\tresult.push({\n\t\t\tdata: encode(this.data.substr(6, 5), 'RRRRR'),\n\t\t\ttext: this.text.substr(6, 5),\n\t\t\toptions: { fontSize: this.fontSize }\n\t\t});\n\n\t\t// Add the end bits\n\t\tresult.push({\n\t\t\tdata: encode(this.data[11], 'R') + '101',\n\t\t\toptions: { height: this.guardHeight }\n\t\t});\n\n\t\t// Add the last digit\n\t\tif (this.displayValue) {\n\t\t\tresult.push({\n\t\t\t\tdata: '00000000',\n\t\t\t\ttext: this.text.substr(11, 1),\n\t\t\t\toptions: { textAlign: 'right', fontSize: this.fontSize }\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t}\n}\n\n// Calulate the checksum digit\n// https://en.wikipedia.org/wiki/International_Article_Number_(EAN)#Calculation_of_checksum_digit\nexport function checksum(number) {\n\tvar result = 0;\n\n\tvar i;\n\tfor (i = 1; i < 11; i += 2) {\n\t\tresult += parseInt(number[i]);\n\t}\n\tfor (i = 0; i < 11; i += 2) {\n\t\tresult += parseInt(number[i]) * 3;\n\t}\n\n\treturn (10 - (result % 10)) % 10;\n}\n\nexport default UPC;\n"],"file":"UPC.js"}