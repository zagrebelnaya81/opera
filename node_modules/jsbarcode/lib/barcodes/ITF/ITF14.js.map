{"version":3,"sources":["../../../src/barcodes/ITF/ITF14.js"],"names":["checksum","data","res","substr","split","map","num","parseInt","reduce","sum","n","idx","Math","ceil","ITF14","options","search","ITF"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAAAC,IAAI,EAAI;AACxB,MAAMC,GAAG,GAAGD,IAAI,CACdE,MADU,CACH,CADG,EACA,EADA,EAEVC,KAFU,CAEJ,EAFI,EAGVC,GAHU,CAGN,UAAAC,GAAG;AAAA,WAAIC,QAAQ,CAACD,GAAD,EAAM,EAAN,CAAZ;AAAA,GAHG,EAIVE,MAJU,CAIH,UAACC,GAAD,EAAMC,CAAN,EAASC,GAAT;AAAA,WAAiBF,GAAG,GAAGC,CAAC,IAAI,IAAKC,GAAG,GAAG,CAAP,GAAY,CAApB,CAAxB;AAAA,GAJG,EAI6C,CAJ7C,CAAZ;AAMA,SAAOC,IAAI,CAACC,IAAL,CAAUX,GAAG,GAAG,EAAhB,IAAsB,EAAtB,GAA2BA,GAAlC;AACA,CARD;;IAUMY,K;;;;;AACL,iBAAYb,IAAZ,EAAkBc,OAAlB,EAA2B;AAAA;;AAC1B;AACA,QAAId,IAAI,CAACe,MAAL,CAAY,aAAZ,MAA+B,CAAC,CAApC,EAAuC;AACtCf,MAAAA,IAAI,IAAID,QAAQ,CAACC,IAAD,CAAhB;AACA;;AAJyB,8EAKpBA,IALoB,EAKdc,OALc;AAM1B;;;;4BAEO;AACP,aAAO,KAAKd,IAAL,CAAUe,MAAV,CAAiB,aAAjB,MAAoC,CAAC,CAArC,IAA0C,CAAC,KAAKf,IAAL,CAAU,EAAV,CAAD,KAAmBD,QAAQ,CAAC,KAAKC,IAAN,CAA5E;AACA;;;;EAXkBgB,a;;eAcLH,K","sourcesContent":["import ITF from './ITF';\n\n// Calculate the checksum digit\nconst checksum = data => {\n\tconst res = data\n\t\t.substr(0, 13)\n\t\t.split('')\n\t\t.map(num => parseInt(num, 10))\n\t\t.reduce((sum, n, idx) => sum + n * (3 - (idx % 2) * 2), 0);\n\n\treturn Math.ceil(res / 10) * 10 - res;\n};\n\nclass ITF14 extends ITF {\n\tconstructor(data, options) {\n\t\t// Add checksum if it does not exist\n\t\tif (data.search(/^[0-9]{13}$/) !== -1) {\n\t\t\tdata += checksum(data);\n\t\t}\n\t\tsuper(data, options);\n\t}\n\n\tvalid() {\n\t\treturn this.data.search(/^[0-9]{14}$/) !== -1 && +this.data[13] === checksum(this.data);\n\t}\n}\n\nexport default ITF14;\n"],"file":"ITF14.js"}